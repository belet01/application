version: '3.8'

services:
  app:
    build: .
    container_name: go_app
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - kafka
      - postgres
    environment:
      REDIS_HOST: redis:6379
      KAFKA_BROKER: kafka:9092
      POSTGRES_DSN: "postgres://postgres:password@postgres:5432/mydb?sslmode=disable"
    networks:
      - go_network

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - go_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - go_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - go_network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: aptodo
      POSTGRES_USER: mypostgres
      POSTGRES_PASSWORD: dbelet
    ports:
      - "5432:5436"
    networks:
      - go_network

networks:
  go_network:
    driver: bridge
